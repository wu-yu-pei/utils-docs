import{h as t,o as p,c as r,k as s,t as n,Q as i,a as d}from"./chunks/framework.9ac31df8.js";function h(o,a){return Math.floor(Math.random()*(a-o+1))+o}const u=`/**
 * 生成数字范围内的随机数
 * @param min 最小数字
 * @param max 最大数字
 * @returns number类型
 */
export declare function random(min: number, max: number): number;
`,m=i(`<h1 id="random" tabindex="-1">random <a class="header-anchor" href="#random" aria-label="Permalink to &quot;random&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>获取一个 min - max 的随机数</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { random } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@bnfe/common-utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">90</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(number);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { random } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@bnfe/common-utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">90</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(number);</span></span></code></pre></div><h2 id="run-code" tabindex="-1">Run Code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run Code&quot;">​</a></h2>`,6),_={class:"language-js vp-adaptive-theme"},y=s("button",{title:"Copy Code",class:"copy"},null,-1),E=s("span",{class:"lang"},"js",-1),b={class:"shiki github-dark vp-code-dark"},g={class:"line"},v={style:{color:"#E1E4E8"}},k={class:"shiki github-light vp-code-light"},f={class:"line"},C={style:{color:"#24292E"}},F=s("h2",{id:"type-declarations",tabindex:"-1"},[d("Type Declarations "),s("a",{class:"header-anchor",href:"#type-declarations","aria-label":'Permalink to "Type Declarations"'},"​")],-1),q={class:"language-ts vp-adaptive-theme"},x=s("button",{title:"Copy Code",class:"copy"},null,-1),D=s("span",{class:"lang"},"ts",-1),T={class:"shiki github-dark vp-code-dark"},B={class:"line"},P={style:{color:"#E1E4E8"}},A={class:"shiki github-light vp-code-light"},S={class:"line"},j={style:{color:"#24292E"}},I=JSON.parse('{"title":"random","description":"","frontmatter":{},"headers":[],"relativePath":"common/src/md/random.md","filePath":"common/src/md/random.md"}'),N={name:"common/src/md/random.md"},M=Object.assign(N,{setup(o){const a=t(u),e=t("null");function c(){const l=h(10,90);e.value=l}return(l,V)=>(p(),r("div",null,[m,s("p",null,[s("button",{onClick:c},"运行")]),s("div",_,[y,E,s("pre",b,[s("code",null,[s("span",g,[s("span",v,n(e.value),1)])])]),s("pre",k,[s("code",null,[s("span",f,[s("span",C,n(e.value),1)])])])]),F,s("div",q,[x,D,s("pre",T,[s("code",null,[s("span",B,[s("span",P,n(a.value),1)])])]),s("pre",A,[s("code",null,[s("span",S,[s("span",j,n(a.value),1)])])])])]))}});export{I as __pageData,M as default};
