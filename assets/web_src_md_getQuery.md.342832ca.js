import{h as t,o as p,c as r,k as s,t as e,Q as i,a as d}from"./chunks/framework.9ac31df8.js";const u=o=>{const n=new RegExp("([&,?])"+o+"=([^&]*)(&|$)","i"),a=window.location.search.match(n)||window.location.hash.match(n);return a!=null?decodeURIComponent(a[2]):null},h=`/**
 * @method 获取地址栏参数
 */
export declare const getQuery: (name: string) => string | null;
`,y=i(`<h1 id="getquery" tabindex="-1">getQuery <a class="header-anchor" href="#getquery" aria-label="Permalink to &quot;getQuery&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>根据 key 从 获取浏览器query中获取 value</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { getQuery } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@bnfe/web-utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.location.hash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;?name=banu&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getQuery</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(value);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { getQuery } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@bnfe/web-utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.location.hash </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;?name=banu&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getQuery</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(value);</span></span></code></pre></div><h2 id="run-code" tabindex="-1">Run Code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run Code&quot;">​</a></h2>`,6),_={class:"language-js vp-adaptive-theme"},E=s("button",{title:"Copy Code",class:"copy"},null,-1),g=s("span",{class:"lang"},"js",-1),m={class:"shiki github-dark vp-code-dark"},b={class:"line"},v={style:{color:"#E1E4E8"}},q={class:"shiki github-light vp-code-light"},k={class:"line"},F={style:{color:"#24292E"}},f=s("h2",{id:"type-declarations",tabindex:"-1"},[d("Type Declarations "),s("a",{class:"header-anchor",href:"#type-declarations","aria-label":'Permalink to "Type Declarations"'},"​")],-1),C={class:"language-ts vp-adaptive-theme"},w=s("button",{title:"Copy Code",class:"copy"},null,-1),Q=s("span",{class:"lang"},"ts",-1),D={class:"shiki github-dark vp-code-dark"},x={class:"line"},T={style:{color:"#E1E4E8"}},B={class:"shiki github-light vp-code-light"},P={class:"line"},A={style:{color:"#24292E"}},R=JSON.parse('{"title":"getQuery","description":"","frontmatter":{},"headers":[],"relativePath":"web/src/md/getQuery.md","filePath":"web/src/md/getQuery.md"}'),S={name:"web/src/md/getQuery.md"},V=Object.assign(S,{setup(o){const n=t(h),a=t("null");function c(){window.location.hash="?name=banu";const l=u("name");a.value=l||"undefined"}return(l,j)=>(p(),r("div",null,[y,s("p",null,[s("button",{onClick:c},"运行")]),s("div",_,[E,g,s("pre",m,[s("code",null,[s("span",b,[s("span",v,e(a.value),1)])])]),s("pre",q,[s("code",null,[s("span",k,[s("span",F,e(a.value),1)])])])]),f,s("div",C,[w,Q,s("pre",D,[s("code",null,[s("span",x,[s("span",T,e(n.value),1)])])]),s("pre",B,[s("code",null,[s("span",P,[s("span",A,e(n.value),1)])])])])]))}});export{R as __pageData,V as default};
