import{h as l,g as i,o as y,c as u,k as s,t as o,Q as d,a as E}from"./chunks/framework.f0534666.js";const h=`export type QueryString = {
    [key: string]: string;
};
export declare const createQueryString: (options: QueryString) => string;
`,p=a=>Object.keys(a).filter(function(n){return a[n]!==void 0&&a[n]!==""&&["pfx","apiKey","sign","key"].indexOf(n)<0}).sort().map(function(n){return n+"="+a[n]}).join("&"),_=d(`<h1 id="createquerystring" tabindex="-1">createQueryString <a class="header-anchor" href="#createquerystring" aria-label="Permalink to &quot;createQueryString&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>把对象格式的数据 转化成 queryString 用于网络请求中的query类型传参</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createQueryString } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@bnfe/common-utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&quot;banu&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">queryString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createQueryString</span><span style="color:#E1E4E8;">(query);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(queryString);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createQueryString } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@bnfe/common-utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">query</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&quot;banu&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">queryString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createQueryString</span><span style="color:#24292E;">(query);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(queryString);</span></span></code></pre></div><h2 id="run-code" tabindex="-1">Run Code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run Code&quot;">​</a></h2>`,6),g=s("p",null,"Result:",-1),m={class:"language-js vp-adaptive-theme"},q=s("button",{title:"Copy Code",class:"copy"},null,-1),b=s("span",{class:"lang"},"js",-1),S={class:"shiki github-dark vp-code-dark"},v={class:"line"},f={style:{color:"#E1E4E8"}},F={class:"shiki github-light vp-code-light"},k={class:"line"},C={style:{color:"#24292E"}},Q=s("h2",{id:"type-declarations",tabindex:"-1"},[E("Type Declarations "),s("a",{class:"header-anchor",href:"#type-declarations","aria-label":'Permalink to "Type Declarations"'},"​")],-1),D={class:"language-js vp-adaptive-theme"},x=s("button",{title:"Copy Code",class:"copy"},null,-1),B=s("span",{class:"lang"},"js",-1),T={class:"shiki github-dark vp-code-dark"},j={class:"line"},A={style:{color:"#E1E4E8"}},P={class:"shiki github-light vp-code-light"},N={class:"line"},V={style:{color:"#24292E"}},J=JSON.parse('{"title":"createQueryString","description":"","frontmatter":{},"headers":[],"relativePath":"common/src/md/createQueryString.md","filePath":"common/src/md/createQueryString.md"}'),O={name:"common/src/md/createQueryString.md"},K=Object.assign(O,{setup(a){const n=l(h),t=l("null");i(()=>p(query));function r(){const e=p({name:"banu",age:20});t.value=e}return(c,e)=>(y(),u("div",null,[_,s("p",null,[s("button",{onClick:e[0]||(e[0]=R=>r())},"运行")]),g,s("div",m,[q,b,s("pre",S,[s("code",null,[s("span",v,[s("span",f,o(t.value),1)])])]),s("pre",F,[s("code",null,[s("span",k,[s("span",C,o(t.value),1)])])])]),Q,s("div",D,[x,B,s("pre",T,[s("code",null,[s("span",j,[s("span",A,o(n.value),1)])])]),s("pre",P,[s("code",null,[s("span",N,[s("span",V,o(n.value),1)])])])])]))}});export{J as __pageData,K as default};
