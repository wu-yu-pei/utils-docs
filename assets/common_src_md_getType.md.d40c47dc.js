import{h as l,o as p,c as r,k as s,t as o,Q as i,a as d}from"./chunks/framework.9ac31df8.js";const y=n=>{const a=Object.prototype.toString,e={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regExp","[object Undefined]":"undefined","[object Null]":"null","[object Object]":"object"};return n instanceof Element?"element":e[a.call(n)]},h=`/**
 * @method 获取当前数据类型
 * @param {*} obj
 */
export declare const getType: (obj: any) => any;
`,u=i(`<h1 id="gettype" tabindex="-1">getType <a class="header-anchor" href="#gettype" aria-label="Permalink to &quot;getType&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>获取数据类型</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { getType } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@bnfe/common-utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getType</span><span style="color:#E1E4E8;">({ logo: </span><span style="color:#9ECBFF;">&quot;banu&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(type);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { getType } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@bnfe/common-utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getType</span><span style="color:#24292E;">({ logo: </span><span style="color:#032F62;">&quot;banu&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(type);</span></span></code></pre></div><h2 id="run-code" tabindex="-1">Run Code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run Code&quot;">​</a></h2>`,6),_={class:"language-js vp-adaptive-theme"},E=s("button",{title:"Copy Code",class:"copy"},null,-1),g=s("span",{class:"lang"},"js",-1),b={class:"shiki github-dark vp-code-dark"},m={class:"line"},v={style:{color:"#E1E4E8"}},f={class:"shiki github-light vp-code-light"},T={class:"line"},k={style:{color:"#24292E"}},j=s("h2",{id:"type-declarations",tabindex:"-1"},[d("Type Declarations "),s("a",{class:"header-anchor",href:"#type-declarations","aria-label":'Permalink to "Type Declarations"'},"​")],-1),C={class:"language-ts vp-adaptive-theme"},F=s("button",{title:"Copy Code",class:"copy"},null,-1),q=s("span",{class:"lang"},"ts",-1),D={class:"shiki github-dark vp-code-dark"},x={class:"line"},B={style:{color:"#E1E4E8"}},P={class:"shiki github-light vp-code-light"},A={class:"line"},S={style:{color:"#24292E"}},R=JSON.parse('{"title":"getType","description":"","frontmatter":{},"headers":[],"relativePath":"common/src/md/getType.md","filePath":"common/src/md/getType.md"}'),N={name:"common/src/md/getType.md"},I=Object.assign(N,{setup(n){const a=l(h),e=l("null");function c(){const t=y({logo:"banu"});e.value=t}return(t,V)=>(p(),r("div",null,[u,s("p",null,[s("button",{onClick:c},"运行")]),s("div",_,[E,g,s("pre",b,[s("code",null,[s("span",m,[s("span",v,o(e.value),1)])])]),s("pre",f,[s("code",null,[s("span",T,[s("span",k,o(e.value),1)])])])]),j,s("div",C,[F,q,s("pre",D,[s("code",null,[s("span",x,[s("span",B,o(a.value),1)])])]),s("pre",P,[s("code",null,[s("span",A,[s("span",S,o(a.value),1)])])])])]))}});export{R as __pageData,I as default};
