import{h as p,o as c,c as r,k as s,t,Q as i,a as d}from"./chunks/framework.f0534666.js";function h(o,a){const n={"M+":o.getMonth()+1,"d+":o.getDate(),"h+":o.getHours(),"m+":o.getMinutes(),"s+":o.getSeconds(),"q+":Math.floor((o.getMonth()+3)/3),S:o.getMilliseconds()};/(y+)/.test(a)&&(a=a.replace(RegExp.$1,(o.getFullYear()+"").substr(4-RegExp.$1.length)));for(const e in n)new RegExp("("+e+")").test(a)&&(a=a.replace(RegExp.$1,RegExp.$1.length===1?n[e]:("00"+n[e]).substr((""+n[e]).length)));return a}const y=`/**
 * @param date Date类型 new Date()
 * @param fmt 格式化类型 yyyy-MM-dd hh:mm:ss
 * @returns 时间字符串 2022-03-29 17:22:30
 */
export declare function formatDate(date: Date, fmt: string): string;
`,u=i(`<h1 id="formatdate" tabindex="-1">formatDate <a class="header-anchor" href="#formatdate" aria-label="Permalink to &quot;formatDate&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>格式化时间显示类型 yyyy-MM-dd hh:mm:ss</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { formatDate } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@bnfe/common-utils&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">phone</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">formatDate</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd hh:mm&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(phone);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { formatDate } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@bnfe/common-utils&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">phone</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">formatDate</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&quot;yyyy-MM-dd hh:mm&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(phone);</span></span></code></pre></div><h2 id="run-code" tabindex="-1">Run Code <a class="header-anchor" href="#run-code" aria-label="Permalink to &quot;Run Code&quot;">​</a></h2>`,6),E={class:"language-js vp-adaptive-theme"},_=s("button",{title:"Copy Code",class:"copy"},null,-1),m=s("span",{class:"lang"},"js",-1),g={class:"shiki github-dark vp-code-dark"},f={class:"line"},D={style:{color:"#E1E4E8"}},b={class:"shiki github-light vp-code-light"},v={class:"line"},k={style:{color:"#24292E"}},F=s("h2",{id:"type-declarations",tabindex:"-1"},[d("Type Declarations "),s("a",{class:"header-anchor",href:"#type-declarations","aria-label":'Permalink to "Type Declarations"'},"​")],-1),C={class:"language-ts vp-adaptive-theme"},q=s("button",{title:"Copy Code",class:"copy"},null,-1),M=s("span",{class:"lang"},"ts",-1),x={class:"shiki github-dark vp-code-dark"},T={class:"line"},B={style:{color:"#E1E4E8"}},P={class:"shiki github-light vp-code-light"},A={class:"line"},R={style:{color:"#24292E"}},N=JSON.parse('{"title":"formatDate","description":"","frontmatter":{},"headers":[],"relativePath":"common/src/md/formatDate.md","filePath":"common/src/md/formatDate.md"}'),S={name:"common/src/md/formatDate.md"},V=Object.assign(S,{setup(o){const a=p(y),n=p("null");function e(){const l=h(new Date,"yyyy-MM-dd hh:mm");n.value=l}return(l,j)=>(c(),r("div",null,[u,s("p",null,[s("button",{onClick:e},"运行")]),s("div",E,[_,m,s("pre",g,[s("code",null,[s("span",f,[s("span",D,t(n.value),1)])])]),s("pre",b,[s("code",null,[s("span",v,[s("span",k,t(n.value),1)])])])]),F,s("div",C,[q,M,s("pre",x,[s("code",null,[s("span",T,[s("span",B,t(a.value),1)])])]),s("pre",P,[s("code",null,[s("span",A,[s("span",R,t(a.value),1)])])])])]))}});export{N as __pageData,V as default};
